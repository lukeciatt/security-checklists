{
  "title": "Cosmos SDK Security Checklist",
  "description": "Security considerations for developing applications on the Cosmos SDK blockchain framework",
  "categories": [
    {
      "id": 1,
      "category": "General Blockchain Application Considerations",
      "description": "Fundamental security considerations for blockchain applications",
      "items": [
        {
          "id": "1.1",
          "item": "Determinism: Ensure all transaction-processing logic is deterministic. No use of time-based, random, or external state in transaction logic.",
          "severity": "High"
        },
        {
          "id": "1.2",
          "item": "Determinism: Avoid floating-point calculations; use integer math instead.",
          "severity": "High"
        },
        {
          "id": "1.3",
          "item": "Determinism: Avoid map or unordered data structure iteration in state-changing code.",
          "severity": "High"
        },
        {
          "id": "1.4",
          "item": "Determinism: Review use of non-deterministic standard library functions.",
          "severity": "Medium"
        },
        {
          "id": "1.5",
          "item": "Panic Handling: Never use explicit panic calls for error handling.",
          "severity": "High"
        },
        {
          "id": "1.6",
          "item": "Panic Handling: ALWAYS log errors and handle edge cases gracefully, especially in Rust's unwrap()/expect() and Go's array/mapping dereferencing.",
          "severity": "High"
        },
        {
          "id": "1.7",
          "item": "Panic Handling: Always handle returned errors from standard and custom functions — unhandled errors are bugs.",
          "severity": "High"
        },
        {
          "id": "1.8",
          "item": "Error Handling: Confirm every error return value is checked.",
          "severity": "High"
        },
        {
          "id": "1.9",
          "item": "Error Handling: Avoid silent error handling, especially in EndBlocker and module callbacks.",
          "severity": "High"
        },
        {
          "id": "1.10",
          "item": "Error Handling: Check that non-expected errors/conditions are never suppressed.",
          "severity": "High"
        }
      ]
    },
    {
      "id": 2,
      "category": "Cosmos Protocol/SDK-Specific Considerations",
      "description": "Security considerations specific to Cosmos SDK protocol implementation",
      "items": [
        {
          "id": "2.1",
          "item": "ABCI Methods: ABCI methods (CheckTx, DeliverTx, BeginBlock, EndBlock, Commit, Query, PrepareProposal, ProcessProposal) must catch and log all panics, with no chain-stopping exceptions.",
          "severity": "High"
        },
        {
          "id": "2.2",
          "item": "BeginBlocker/EndBlocker: Ensure logic is deterministic and not computationally expensive (gas limits do not apply).",
          "severity": "High"
        },
        {
          "id": "2.3",
          "item": "BeginBlocker/EndBlocker: Heuristically evaluate for resource abuse vectors (DoS potential).",
          "severity": "High"
        },
        {
          "id": "2.4",
          "item": "CheckTx: Only lightweight, deterministic checks allowed.",
          "severity": "High"
        },
        {
          "id": "2.5",
          "item": "CheckTx: Avoid resource-intensive validation not constrained by gas.",
          "severity": "High"
        },
        {
          "id": "2.6",
          "item": "PrepareProposal/ProcessProposal: Respect MaxGas and MaxBytes constraints.",
          "severity": "High"
        },
        {
          "id": "2.7",
          "item": "PrepareProposal/ProcessProposal: PrepareProposal (run only by proposer) may be non-deterministic, so take care that all effects are only candidate state.",
          "severity": "Medium"
        },
        {
          "id": "2.8",
          "item": "PrepareProposal/ProcessProposal: ProcessProposal should only validate, not alter persistent state, and must be deterministic.",
          "severity": "High"
        },
        {
          "id": "2.9",
          "item": "InitChain: Gas meter must be reset at initialization. If not, ensure the first block after InitChain is empty to prevent gas calculation mismatches.",
          "severity": "High"
        },
        {
          "id": "2.10",
          "item": "Broadcast in Commit: Never call mempool operations (broadcast_tx_sync, etc.) from within the Commit handler to avoid deadlocks.",
          "severity": "High"
        },
        {
          "id": "2.11",
          "item": "Queries: For Cosmos SDK ≥v0.47: Use module_query_safe for state-machine-safe queries.",
          "severity": "Medium"
        },
        {
          "id": "2.12",
          "item": "Queries: Ensure deterministic results and proper gas accounting for potentially expensive queries.",
          "severity": "High"
        },
        {
          "id": "2.13",
          "item": "State Management: State must only change inside FinalizeBlock and persist in Commit. Any state mutation elsewhere is a red flag.",
          "severity": "High"
        },
        {
          "id": "2.14",
          "item": "State Management: No calls in external APIs or hooks can mutate consensus state.",
          "severity": "High"
        }
      ]
    },
    {
      "id": 3,
      "category": "Module Security",
      "description": "Security considerations for Cosmos SDK modules",
      "items": [
        {
          "id": "3.1",
          "item": "Ante Handlers: Ensure proper fee payment logic (no bypass/vulnerabilities).",
          "severity": "High"
        },
        {
          "id": "3.2",
          "item": "Ante Handlers: Check for gas accounting on nested/cross-module calls.",
          "severity": "High"
        },
        {
          "id": "3.3",
          "item": "Ante Handlers: Guard against Authz (authorization) manipulation or message wrapping that skips checks.",
          "severity": "High"
        },
        {
          "id": "3.4",
          "item": "Errors and Codes: Each module must register errors with unique codespace and codes > 1.",
          "severity": "Medium"
        },
        {
          "id": "3.5",
          "item": "Errors and Codes: Avoid code reuse between modules.",
          "severity": "Medium"
        },
        {
          "id": "3.6",
          "item": "Token & Address Handling: Blacklist internal/module addresses as token recipients via the x/bank module.",
          "severity": "High"
        },
        {
          "id": "3.7",
          "item": "Token & Address Handling: Validate all transfers, especially bulk transfers.",
          "severity": "High"
        },
        {
          "id": "3.8",
          "item": "Token & Address Handling: Prefer transferring coins one-by-one and verify each transfer. Avoid SendCoins batch functions that mask failure of individual sends.",
          "severity": "High"
        },
        {
          "id": "3.9",
          "item": "Token & Address Handling: Ensure vesting logic can't halt chain on malformed accounts.",
          "severity": "High"
        }
      ]
    },
    {
      "id": 4,
      "category": "Staking and IBC",
      "description": "Security considerations for staking module and Inter-Blockchain Communication",
      "items": [
        {
          "id": "4.1",
          "item": "Staking Module: Validate all fields in MsgCreateValidator (e.g., unique operator address, public keys, proper denom, valid commission rates).",
          "severity": "High"
        },
        {
          "id": "4.2",
          "item": "Staking Module: Defend against front-running on validator creation.",
          "severity": "High"
        },
        {
          "id": "4.3",
          "item": "Inter-Blockchain Communication (IBC): Always verify source of IBC packets and validate message data before acting on it.",
          "severity": "High"
        },
        {
          "id": "4.4",
          "item": "Inter-Blockchain Communication (IBC): Only trust privileged operations from known channels.",
          "severity": "High"
        },
        {
          "id": "4.5",
          "item": "Inter-Blockchain Communication (IBC): Consider Solo Machine clients and how they impact trust and permissions.",
          "severity": "Medium"
        }
      ]
    },
    {
      "id": 5,
      "category": "Vote Extensions (ABCI++)",
      "description": "Security considerations for vote extensions in ABCI++",
      "items": [
        {
          "id": "5.1",
          "item": "Vote Extensions Implementation: Never allow vote extension processing or validation to alter app state.",
          "severity": "High"
        },
        {
          "id": "5.2",
          "item": "Vote Extensions Implementation: Validate extensions on both proposal build (PrepareProposal) and vote verification (VerifyVoteExtension).",
          "severity": "High"
        },
        {
          "id": "5.3",
          "item": "Vote Extensions Implementation: Watch for non-determinism and excessive size/latency in extensions.",
          "severity": "Medium"
        }
      ]
    },
    {
      "id": 6,
      "category": "Miscellaneous (Latest Versions)",
      "description": "Additional security considerations for latest Cosmos SDK versions",
      "items": [
        {
          "id": "6.1",
          "item": "sdk.Context Deprecation: Avoid use of sdk.Context global state in v0.52+; use appmodule.Environment.",
          "severity": "Medium"
        },
        {
          "id": "6.2",
          "item": "Gas and Consensus Parameters: Always enforce gas rules in both mempool and consensus.",
          "severity": "High"
        },
        {
          "id": "6.3",
          "item": "Gas and Consensus Parameters: Validate updates to consensus parameters (no accidental disabling of protections).",
          "severity": "High"
        }
      ]
    }
  ],
  "notes": [
    "This checklist should be reviewed before each major release",
    "Pay special attention to items marked as critical for chain security",
    "Consider this checklist in conjunction with your specific use case requirements",
    "Regular audits should include verification of these security measures"
  ]
}
