{
  "title": "EVM Security Checklist (Solidity Vyper Yul)",
  "description": "EVM Security Checklist for Solidity, Vyper, and Yul smart contract development",
  "categories": [
    {
      "id": 1,
      "category": "Access Control and Visibility",
      "description": "Visibility specifiers and authorization for privileged actions",
      "items": [
        { "id": "1.1", "item": "Explicitly set visibility for all functions and state variables", "severity": "High" },
        { "id": "1.2", "item": "Enforce role-based access control for all privileged operations", "severity": "High" },
        { "id": "1.3", "item": "Never use tx.origin for authorization decisions", "severity": "High" }
      ]
    },
    {
      "id": 2,
      "category": "Compiler and Language Settings",
      "description": "Safe compiler versions and deterministic builds",
      "items": [
        { "id": "2.1", "item": "Use a recent, patched Solidity compiler version", "severity": "Medium" },
        { "id": "2.2", "item": "Pin exact compiler version and flags (avoid floating pragma)", "severity": "Medium" },
        { "id": "2.3", "item": "Avoid deprecated Solidity features and built-ins", "severity": "Medium" }
      ]
    },
    {
      "id": 3,
      "category": "Error Handling and Assertions",
      "description": "Defensive checks and safe failure semantics",
      "items": [
        { "id": "3.1", "item": "Ensure code never relies on failing assert; validate inputs and invariants with require", "severity": "High" }
      ]
    },
    {
      "id": 4,
      "category": "External Calls and Interactions",
      "description": "Safe patterns for calling other contracts and handling results",
      "items": [
        { "id": "4.1", "item": "Check return values of all low-level/external calls", "severity": "High" },
        { "id": "4.2", "item": "Restrict delegatecall to trusted, verified implementations only", "severity": "High" },
        { "id": "4.3", "item": "Follow Checks-Effects-Interactions pattern for functions making external calls", "severity": "High" },
        { "id": "4.4", "item": "Call only trusted addresses and validate external contract interfaces", "severity": "High" }
      ]
    },
    {
      "id": 5,
      "category": "Denial of Service and Concurrency",
      "description": "Prevent blocking conditions and order-dependent behavior",
      "items": [
        { "id": "5.1", "item": "Design functions to avoid DoS via unbounded work, external dependencies, or specific states", "severity": "High" },
        { "id": "5.2", "item": "Eliminate race conditions and transaction-order dependence (TOD)", "severity": "High" }
      ]
    },
    {
      "id": 6,
      "category": "Time and Randomness",
      "description": "Safe handling of time and unpredictability",
      "items": [
        { "id": "6.1", "item": "Do not use block values as a proxy for time; rely on timestamps with tolerances", "severity": "Medium" },
        { "id": "6.2", "item": "Do not derive randomness from chain attributes; use secure randomness sources", "severity": "High" }
      ]
    },
    {
      "id": 7,
      "category": "Inheritance and State Layout",
      "description": "Safe multiple inheritance and clear state definitions",
      "items": [
        { "id": "7.1", "item": "Specify correct linearized inheritance order when using multiple base contracts", "severity": "Medium" },
        { "id": "7.2", "item": "Avoid shadowing of state variables across inheritance hierarchies", "severity": "Medium" }
      ]
    },
    {
      "id": 8,
      "category": "Cryptography and Signatures",
      "description": "Replay protection and message authenticity",
      "items": [
        { "id": "8.1", "item": "Use unique message identifiers and include chain ID in signed messages", "severity": "High" }
      ]
    },
    {
      "id": 9,
      "category": "Asset Safety and Accounting",
      "description": "Conservation of value and correct accounting",
      "items": [
        { "id": "9.1", "item": "Protect user funds; require proper authorization for any transfer or withdrawal", "severity": "High" },
        { "id": "9.2", "item": "Prevent unauthorized manipulation of user balances", "severity": "High" },
        { "id": "9.3", "item": "Maintain data consistency across storage, events, and external views", "severity": "High" },
        { "id": "9.4", "item": "Enforce token mint/burn strictly according to documented rules", "severity": "High" }
      ]
    },
    {
      "id": 10,
      "category": "Oracles and Market Manipulation",
      "description": "Trusted price/data sources and resistance to manipulation",
      "items": [
        { "id": "10.1", "item": "Provide pause/fallback and validation for external oracle feeds", "severity": "High" },
        { "id": "10.2", "item": "Defend against flash-loan price manipulation (e.g., TWAP/trusted oracles)", "severity": "High" }
      ]
    },
    {
      "id": 11,
      "category": "Gas and Performance",
      "description": "Bounded execution and efficiency",
      "items": [
        { "id": "11.1", "item": "Avoid unbounded loops and gas-heavy patterns that risk exceeding block gas limits", "severity": "Medium" }
      ]
    },
    {
      "id": 12,
      "category": "Standards and Compliance",
      "description": "Protocol standards and requirement adherence",
      "items": [
        { "id": "12.1", "item": "Comply with relevant EIP standards for expected behaviors and interfaces", "severity": "Medium" },
        { "id": "12.2", "item": "Ensure implementation matches documented and customer requirements", "severity": "Medium" }
      ]
    },
    {
      "id": 13,
      "category": "Style and Dependencies",
      "description": "Readable code and stable imports",
      "items": [
        { "id": "13.1", "item": "Follow established style guides and best practices", "severity": "Optional" },
        { "id": "13.2", "item": "Use stable, non-draft imports; avoid experimental or changing dependencies", "severity": "Medium" }
      ]
    },
    {
      "id": 14,
      "category": "Environment and Testing",
      "description": "Reproducible development and comprehensive tests",
      "items": [
        { "id": "14.1", "item": "Provide a reproducible build/deploy environment with clear documentation", "severity": "Medium" },
        { "id": "14.2", "item": "Ensure extensive unit/integration tests including negative cases and multi-user scenarios", "severity": "Medium" }
      ]
    },
    {
      "id": 15,
      "category": "Destructive Operations",
      "description": "Self-destruction and irreversible actions",
      "items": [
        { "id": "15.1", "item": "Avoid SELFDESTRUCT or ensure it cannot endanger user funds", "severity": "High" }
      ]
    }
  ]
}
